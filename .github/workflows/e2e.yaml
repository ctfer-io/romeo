name: E2E tests

on:
  workflow_call:

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.work"

      - name: Set up Docker registry
        run: |
          docker network create kind || true
          docker run -d --network kind --name registry -p 5000:5000 registry:2
      - name: Write config file
        run: |
          cat <<EOF > kind-config.yaml
          apiVersion: kind.x-k8s.io/v1alpha4
          kind: Cluster
          containerdConfigPatches:
          - |
            [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5000"]
              endpoint = ["http://registry:5000"]

          kubeadmConfigPatches:
          - |
            kind: ClusterConfiguration
            apiServer:
              extraArgs:
                "service-node-port-range": "30000-30005"
          nodes:
          - role: control-plane
            extraPortMappings:
            - containerPort: 30000
              hostPort: 30000
            - containerPort: 30001
              hostPort: 30001
            - containerPort: 30002
              hostPort: 30002
            - containerPort: 30003
              hostPort: 30003
            - containerPort: 30004
              hostPort: 30004
            - containerPort: 30005
              hostPort: 30005
          EOF
      - name: Set up Kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          config: kind-config.yaml
          cluster_name: kind
        env:
          KIND_EXPERIMENTAL_DOCKER_NETWORK: kind

      - name: Patch local-path to mount shared filesystem path on the single kind node
        run: |
          # From https://github.com/kubernetes-sigs/kind/issues/1487#issuecomment-2211072952
          kubectl -n local-path-storage patch configmap local-path-config -p '{"data": {"config.json": "{\n\"sharedFileSystemPath\": \"/var/local-path-provisioner\"\n}"}}'

      - name: Export server URL
        id: server
        run: |
          echo "server=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kind-control-plane)" >> "$GITHUB_OUTPUT"

      - name: Build and push Romeo webserver
        run: |
          cd webserver
          docker build \
              -t localhost:5000/ctferio/romeo:${{ github.sha }} .
          docker push localhost:5000/ctferio/romeo:${{ github.sha }}

      - name: Install Pulumi
        uses: pulumi/actions@d7ceb0215da5a14ec84f50b703365ddf0194a9c8 # v6.6.0
      - name: Prepare environment
        run: |
          pulumi login --local
          kubectl create ns romeo-in-ci

      - name: Romeo install
        id: install
        uses: ctfer-io/romeo/install@359b39dbd63ed45038293ab6e46a848ec16b62b7
        with:
          kubeconfig: ~/.kube/config
          harden: true

      - name: Romeo environment
        id: env
        uses: ctfer-io/romeo/environment@359b39dbd63ed45038293ab6e46a848ec16b62b7
        with:
          registry: localhost:5000
          kubeconfig: ${{ steps.install.outputs.kubeconfig }}
          namespace: ${{ steps.install.outputs.namespace }}
          storage-class-name: standard
          tag: ${{ github.sha }}
          pvc-access-mode: ReadWriteOnce
          harden: true

      - name: Run Integration Tests
        run: |
          go test -v ./environment/deploy/integration/ -run=^Test_I_ -coverprofile=integration.cov -timeout=10m
        env:
          NAMESPACE: ${{ steps.install.outputs.namespace }}
          TAG: ${{ github.sha }}
          REGISTRY: localhost:5000
          KUBECONFIG: ${{ steps.install.outputs.kubeconfig }}
          CLAIM_NAME: ${{ steps.env.outputs.claim-name }}
          SERVER: ${{ steps.server.outputs.server }}

      - name: Download Romeo results
        id: download
        uses: ctfer-io/romeo/download@359b39dbd63ed45038293ab6e46a848ec16b62b7
        with:
          server: http://${{ steps.server.outputs.server }}:${{ steps.env.outputs.port }}

      - name: Merge coverage data
        run: |
          # Point back to the actual Go module tested.
          # It cannot be inferred, leading to this highly precise step.
          sed -i 's|^/go/src|github.com/ctfer-io/romeo/webserver|' ${{ steps.download.outputs.path }}

          go install go.shabbyrobe.org/gocovmerge/cmd/gocovmerge@fa4f82cfbf4d57c646c1ed0f35002bf1b89fbf7a
          gocovmerge integration.cov ${{ steps.download.outputs.path }} > e2e.cov

      - name: Upload e2e tests coverage
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: e2e.cov
          path: e2e.cov
